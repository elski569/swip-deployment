#INspired by sb-local-development/local/sb-swip-platform.yaml
sb-swip-platform:
  global:
    ingress:
      enabled: false
    # monitoring:
    #   enabled: false
  
  sb-admin-service:
    enabled: true
    cloudnativepg:
      enabled: false 
      host: swim-rw.cloud-pg
    postgres:
      enabled: true
      host: swip-middleware-postgresql
      port: 5432
      releaseName: swip-middleware
      middleware:
        suffix: ""
    config:
      swimbird:
        authorization:
          keycloak:
            baseUri: http://keycloak.keycloak:8090 #ns.service:port
            baseUris: http://keycloak.keycloak:8090
    # image:
    #   tag: latest
    #   imagePullPolicy: Always
    env:
      - name: SPRING_DATASOURCE_PARTIES_URL
        value: "jdbc:postgresql://swip-middleware-postgresql:5432/sb_parties"
      - name: SPRING_DATASOURCE_AUTHORIZATION_URL
        value: "jdbc:postgresql://swip-middleware-postgresql:5432/sb_authorization"
      - name: SPRING_DATASOURCE_PARTIES_USERNAME
        value: "postgres"
      - name: SPRING_DATASOURCE_AUTHORIZATION_USERNAME
        value: "postgres"
      - name: SPRING_DATASOURCE_PARTIES_PASSWORD
        value: "postgres"
      - name: SPRING_DATASOURCE_AUTHORIZATION_PASSWORD
        value: "postgres"
      - name: SPRING_LIQUIBASE_ENABLED
        value: "true"
    

  # postgres:
  #     enabled: false
      # host: swip-middleware-postgresql
      # port: 5432
      # releaseName: swip-middleware
    #  Remove the middleware.suffix setting
    #   middleware:
    #     suffix: ""  # Empty string to prevent adding -mw
    #   Remove any release name prefix
    #   fullnameOverride: swip-middleware-postgresql
    #   releaseName: "" 
    # env:
    #   - name: SPRING_DATASOURCE_PARTIES_URL
    #     value: "jdbc:postgresql://swip-middleware-postgresql:5432/sb_parties"
    #   - name: SPRING_DATASOURCE_AUTHORIZATION_URL
    #     value: "jdbc:postgresql://swip-middleware-postgresql:5432/sb_authorization"
    #   - name: SPRING_DATASOURCE_PARTIES_USERNAME
    #     value: "postgres"
    #   - name: SPRING_DATASOURCE_AUTHORIZATION_USERNAME
    #     value: "postgres"
    #   - name: SPRING_LIQUIBASE_ENABLED
    #     value: "true"

  sb-standalone:
    enabled: true
    service:
      type: LoadBalancer
      port: 8093  # External port
      targetPort: 8080  # Container port
    image:
      tag: latest
      imagePullPolicy: Always
    resources:
      default: small
    ingress:
      enabled: false
    config:
      sb_services:
        marketdata:
          enabled: false  # Disable all marketdata
          # six:
          #   enabled: false 
        authorization:
          oauth2:
            realm: local
            clientSecret: u4EHBMgAum9dU1a9ohSi6DWsMdimBz3j
          keycloak:
            hostName: localhost
            port: 8090
          swip_app: ##swip app???
            host: localhost
            port: 8090
        layout:
          profile_path: value-bridge
        liveness:
          enabled: false
          failureThreshold: 100
          periodSeconds: 300
          initialDelaySeconds: 300
        readiness:
          enabled: false
          failureThreshold: 100
          periodSeconds: 300
          initialDelaySeconds: 300
      # Add server port configuration
      # server:
      #   port: 8080
      #   contextPath: /sb-backend
    # postgresql:
    #   enabled: false
    #   releaseName: swip-middleware
    cloudnativepg:
      enabled: false
      host: swim-rw.cloud-pg
    sb-kafka:
      enabled: true
      releaseName: swip-middleware
      cloud:
        enabled: false
    # env:
    #   - name: SPRING_CLOUD_STREAM_KAFKA_BINDER_BROKERS
    #     value: "swip-middleware-sb-kafka-svc"  # Updated service name
    #   - name: SPRING_CLOUD_STREAM_KAFKA_BINDER_AUTOCREATETOPICS
    #     value: "true"
    #   - name: SWIMBIRD_SERVER_PRIMARY
    #     value: "true"
    #   - name: SWIMBIRD_RELEASE
    #     value: "swip-platform"
      
    mongodb:
      enabled: true
      releaseName: swip-middleware
    monitoring:
      enabled: false
    service:
      port: 8093
      type: LoadBalancer
    probes:
      livenessProbe:
        enabled: false
      readinessProbe:
        enabled: false
    # containerPorts:
    #   - name: http
    #     containerPort: 8080
    #     protocol: TCP
    #   - name: metrics
    #     containerPort: 8087
    #     protocol: TCP
    # probes:
    #   livenessProbe:
    #     enabled: true
    #     httpGet:
    #       path: /sb-backend/internal/health
    #       port: 8080
    #     initialDelaySeconds: 180  # Give more time to start
    #     timeoutSeconds: 30
    #     periodSeconds: 15
    #     failureThreshold: 3
    #   readinessProbe:
    #     enabled: true
    #     httpGet:
    #       path: /sb-backend/internal/alive/ping
    #       port: 8080
    #     initialDelaySeconds: 120  # Give more time to start
    #     timeoutSeconds: 1
    #     periodSeconds: 10
    #     failureThreshold: 30

  sb-swip-app :
    enabled: true
    image:
      tag: latest
      imagePullPolicy: Always
    ingress:
      enabled: false
    service:
      port: 8090
      type: LoadBalancer
    config:
      backendPort: 8093
      peFundsBackendPort: 8091
      privateAssetsBackendPort: 8092
      USE_GLOBAL_ACCOUNT_SELECTOR_REPLACE: true
      globalResourceBasePath:
      USE_LEGACY_ACCOUNT_LIST: "false"
      RESTRICT_DASHBOARD_CHART_VIEW: "false"

  sb-private-assets:
    enabled: false #good for testing later on
    image:
      tag: latest
      imagePullPolicy: Always
  
  sb-private-funds: 
    enabled: false
    image:
      tag: latest
      imagePullPolicy: Always

  sb-accounting:
    enabled: false
  
  sb-document:
    enabled: false

  sb-clickhouse-interface:
    enabled: false

  sb-clickhouse-cdc:
    enabled: false
  
  sb-config-provider:
    enabled: false

